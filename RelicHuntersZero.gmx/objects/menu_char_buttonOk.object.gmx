<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_char_button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>menu_char_button</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Name
event_inherited();
labelString = 'START';
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Trigger
event_inherited();

if (isActive) &amp;&amp; (owner.slotInput != K_INPUT_KEYBOARD) if joy_check_pressed(owner.slotInput,1) trigger = true;

if (trigger)
{
    if (instance_exists(menu_char_card1))
    {
        if (menu_char_card1.slotInput != -1) &amp;&amp; (menu_char_card1.slotCharacter != -1)
        {
            global.input[1] = menu_char_card1.slotInput;
            global.character[1] = menu_char_card1.slotCharacter;
            if (menu_char_card1.slotCharacter == char_random) global.character[1] = irandom_range(char_jimmy,char_ass);
            global.playerCount = 1;
        }
    } 
    
    if (instance_exists(menu_char_card2))
    {
        if (menu_char_card2.slotInput != -1) &amp;&amp; (menu_char_card2.slotCharacter != -1)
        {
            global.input[2] = menu_char_card2.slotInput;
            global.character[2] = menu_char_card2.slotCharacter;
            if (menu_char_card2.slotCharacter == char_random) global.character[2] = irandom_range(char_jimmy,char_ass);
            global.playerCount = 2;
        }
    } 
    
    //Reset everything, save and start the game
    global.selectionLocked[K_INPUT_ALL] = false;
    global.selectionLocked[K_INPUT_KEYBOARD] = false;
    global.selectionLocked[K_INPUT_JOYSTICK1] = false;
    global.selectionLocked[K_INPUT_JOYSTICK2] = false;
    
    ini_open(working_directory + "\saveData.ini");
    
    ini_write_real('Character','playerCount',global.playerCount);
    ini_write_real('Input','Input1',global.input[1]);
    ini_write_real('Character','Character1',global.character[1]);
    
    if (global.playerCount &gt; 1)
    {
        ini_write_real('Input','Input2',global.input[2]);
        ini_write_real('Character','Character2',global.character[2]);
    }
    
    ini_close();
    
    //Debug
    show_debug_message("ready to go!");
    show_debug_message("My input1 is "+string(global.input[1]));    show_debug_message("My char1 is "+string(global.character[1]));
    if (global.playerCount &gt; 1) {   show_debug_message("My input2 is "+string(global.input[2]));    show_debug_message("My char2 is "+string(global.character[2])); }
    //
    
    room_goto(room_start);
    
    trigger = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
